{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/filter.module.css","components/ContactForm/ContactForm.js","types/index.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onAddContact","props","validateForm","id","uuidv4","reset","onCheckContact","trim","alert","className","s","form","onSubmit","this","htmlFor","input","type","placeholder","onChange","autoFocus","Component","ContactItem","PropTypes","string","isRequired","ContactListItem","onRemove","item","onClick","propTypes","contacts","arrayOf","shape","ContactList","length","map","contact","Filter","filter","search","App","handleAddNewContact","nameContact","handleCheckContact","isExistContact","find","handleRemoveContact","handleFilter","getVisibleContact","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef01d6a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2ZGtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__3EbPO\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n    onCheckContact: PropTypes.func,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAddContact } = this.props;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) {\r\n      this.reset();\r\n      return;\r\n    }\r\n    onAddContact({ id: uuidv4(), name, number });\r\n    this.reset();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckContact } = this.props;\r\n    if (!name.trim() || !number.trim()) {\r\n      alert('Для добавления контакта заполните поля Name и Number');\r\n      return false;\r\n    }\r\n    return onCheckContact(name);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"\">\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              placeholder=\"Введите имя контакта\"\r\n              onChange={this.handleChange}\r\n              autoFocus\r\n            />\r\n          </label>\r\n          <label htmlFor=\"\">\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Введите номер контакта\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button>Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const ContactItem = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\nimport { ContactItem } from '../../types';\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      {name} : {number} <button onClick={() => onRemove(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  ...ContactItem,\r\n  onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactItem } from '../../types/index';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          id={contact.id}\r\n          onRemove={onRemove}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(ContactItem)),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div>\r\n      <p className={s.search}>Find contacts by name</p>\r\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleAddNewContact = nameContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, nameContact],\n    }));\n\n  handleCheckContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAddContact={this.handleAddNewContact}\n          onCheckContact={this.handleCheckContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3XhOY\",\"input\":\"ContactForm_input__15CH_\"};"],"sourceRoot":""}